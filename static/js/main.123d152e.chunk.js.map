{"version":3,"sources":["components/Box.js","components/Board.js","Tetris.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","className","style","backgroundColor","color","Board","board","rows","cols","renderBox","i","j","colors","renderRow","row","push","boardJSX","id","Tetris","getRandom","p","pieces","Math","floor","random","pid","drawTetrimino","t","getTetrimino","x","y","rid","tetrimino","block","spawnTetrimino","done","isValidTetrimino","flag","a","b","down","updateScore","rotate","left","right","splice","Array","fill","score","this","map","Game","state","tetris","ditchInterval","steps","interval","handleReset","setState","window","clearTimeout","tid","setTimeout","intervalFunc","console","log","handleKeyPress","e","k","key","document","addEventListener","removeEventListener","textAlign","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.123d152e.chunk.js","sourcesContent":["function Box(props) {\r\n  return (\r\n    <div className=\"box\" style={{backgroundColor: props.color}}>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Box;","import Box from './Box';\r\nimport colors from './colors.json';\r\n\r\nfunction Board(props) {\r\n  const { board, rows, cols } = props;\r\n  const renderBox = (i, j) => <Box key={`${i} ${j}`} color={colors[board[i][j]]}/>;\r\n\r\n  const renderRow = (i) => {\r\n    let row = [];\r\n    for(let j=0; j<cols; ++j) {\r\n      row.push(renderBox(i, j));\r\n    }\r\n    return <div key={i} className=\"row\">{ row }</div>;\r\n  }\r\n\r\n  let boardJSX = [];\r\n  for(let i=0; i<rows; ++i) {\r\n    boardJSX.push(renderRow(i));\r\n  }\r\n  return <div id=\"board\">{ boardJSX }</div>;\r\n}\r\n\r\nexport default Board;","class Tetris {\r\n  constructor() {\r\n    this.rows = 20;\r\n    this.cols = 10;\r\n    this.pieces = [\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"];\r\n    this.board = Array(this.rows).fill().map(() => Array(this.cols).fill(\"0\"));\r\n    this.score = 0;\r\n    this.spawnTetrimino();\r\n    this.done = false;\r\n  }\r\n\r\n  getRandom = () => {\r\n    const p = this.pieces[Math.floor(Math.random() * 7)];\r\n    if(p === this.pid) return this.pieces[Math.floor(Math.random() * 7)];\r\n    else return p;\r\n  }\r\n\r\n  drawTetrimino = () => {\r\n    const t = this.getTetrimino(this.x, this.y, this.pid, this.rid);\r\n    for(const block of this.tetrimino) {\r\n      this.board[block[0]][block[1]] = \"0\";\r\n    }\r\n    for(const block of t) {\r\n      this.board[block[0]][block[1]] = this.pid;\r\n    }\r\n    this.tetrimino = t;\r\n  }\r\n\r\n  getTetrimino = (x, y, pid, rid) => {\r\n    if(pid === \"I\") {\r\n      if(rid%2 === 1) return [[x-3,y], [x-2,y], [x-1,y], [x,y]];\r\n      else return [[x,y-3], [x,y-2], [x,y-1], [x,y]];\r\n    }\r\n    else if(pid === \"J\")  {\r\n      if(rid === 0) return [[x-1,y-2], [x,y-2], [x,y-1], [x,y]];\r\n      if(rid === 1) return [[x-2,y-1], [x-1,y-1], [x,y-1], [x,y-2]];\r\n      if(rid === 2) return [[x-1,y-2], [x-1,y-1], [x-1,y], [x,y]];\r\n      if(rid === 3) return [[x-2,y-1], [x-2,y-2], [x-1,y-2], [x,y-2]];\r\n    }\r\n    else if(pid === \"L\") {\r\n      if(rid === 0) return [[x-1,y], [x-1,y-1], [x-1,y-2], [x,y-2]];\r\n      if(rid === 1) return [[x-2,y-1], [x-1,y-1], [x,y-1], [x,y]];\r\n      if(rid === 2) return [[x,y-2], [x,y-1], [x,y], [x-1,y]];\r\n      if(rid === 3) return [[x-2,y-1], [x-2,y-2], [x-1,y-1], [x,y-1]];\r\n    }\r\n    else if(pid === \"O\") {\r\n      return [[x-1,y-1], [x,y-1], [x-1,y], [x,y]];\r\n    }\r\n    else if(pid === \"S\") {\r\n      if(rid%2 === 0) return [[x,y-2], [x,y-1], [x-1,y-1], [x-1,y]];\r\n      else return [[x-2,y-1], [x-1,y-1], [x-1,y], [x,y]];\r\n    }\r\n    else if(pid === \"T\") {\r\n      if(rid === 0) return [[x-1,y-2], [x-1,y-1], [x-1,y], [x,y-1]];\r\n      if(rid === 1) return [[x-2,y-1], [x-1,y-1], [x,y-1], [x-1,y]];\r\n      if(rid === 2) return [[x,y-2], [x,y-1], [x,y], [x-1,y-1]];\r\n      if(rid === 3) return [[x-2,y], [x-1,y], [x,y], [x-1,y-1]];\r\n    }\r\n    else if(pid === \"Z\") {\r\n      if(rid%2 === 0) return [[x-1,y-2], [x-1,y-1], [x,y-1], [x,y]];\r\n      else return [[x-2,y], [x-1,y], [x-1,y-1], [x,y-1]];\r\n    }\r\n  }\r\n\r\n  spawnTetrimino = () => {\r\n    this.pid = this.getRandom();\r\n    this.rid = 0;\r\n    this.x = (this.pid === \"I\") ? 0 : 1;\r\n    this.y = 5;\r\n    this.tetrimino = this.getTetrimino(this.x, this.y, this.pid, this.rid);\r\n    for(const [x, y] of this.tetrimino) {\r\n      if(this.board[x][y] !== \"0\") {\r\n        this.done = true;\r\n      }\r\n    }\r\n    this.drawTetrimino();\r\n  }\r\n\r\n  isValidTetrimino = (t) => {\r\n    for(const [x, y] of t) {\r\n      if(x<0 || x>=this.rows || y<0 || y>=this.cols)\r\n        return;\r\n      \r\n      if(this.board[x][y] !== \"0\") {\r\n        let flag = true;\r\n        for(const [a, b] of this.tetrimino) {\r\n          if(a === x && b === y) {\r\n            flag = false;\r\n            break;\r\n          }\r\n        }\r\n        if(flag) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  down = () => {\r\n    let t = this.getTetrimino(this.x+1, this.y, this.pid, this.rid);\r\n    if(!this.isValidTetrimino(t)) {\r\n      this.updateScore();\r\n      this.spawnTetrimino();\r\n      return;\r\n    }\r\n    ++this.x;\r\n    this.drawTetrimino();\r\n  }\r\n\r\n  rotate = () => {\r\n    let t = this.getTetrimino(this.x, this.y, this.pid, (this.rid + 1) % 4);\r\n    if(!this.isValidTetrimino(t)) return;\r\n    this.rid = (this.rid + 1) % 4;\r\n    this.drawTetrimino();\r\n  }\r\n\r\n  left = () => {\r\n    let t = this.getTetrimino(this.x, this.y-1, this.pid, this.rid);\r\n    if(!this.isValidTetrimino(t)) return;\r\n    --this.y;\r\n    this.drawTetrimino();\r\n  }\r\n\r\n  right = () => {\r\n    let t = this.getTetrimino(this.x, this.y+1, this.pid, this.rid);\r\n    if(!this.isValidTetrimino(t)) return;\r\n    ++this.y;\r\n    this.drawTetrimino();\r\n  }\r\n\r\n  updateScore = () => {\r\n    for(let i=this.rows-1; i>=0; --i) {\r\n      let flag = true;\r\n      for(let j=0; j<this.cols; ++j) {\r\n        if(this.board[i][j] === \"0\") {\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n      if(flag) {\r\n        this.board.splice(i, 1);\r\n        this.board.splice(0, 0, Array(this.cols).fill(\"0\"));\r\n        ++this.score;\r\n        ++i;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tetris;","import { Component } from \"react\";\r\nimport Board from './Board';\r\nimport Tetris from '../Tetris';\r\n\r\nclass Game extends Component {\r\n  state = {tetris: new Tetris(), ditchInterval: false};\r\n  steps = 0;\r\n  interval = 900;\r\n\r\n  componentDidMount() {\r\n    this.tid = window.setTimeout(this.intervalFunc, this.interval);\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearTimeout(this.tid);\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({tetris: new Tetris(), ditchInterval: false});\r\n    this.steps = 0;\r\n    this.interval = 900;\r\n    window.clearTimeout(this.tid);\r\n    this.tid = window.setTimeout(this.intervalFunc, this.interval);\r\n  }\r\n\r\n  intervalFunc = () => {\r\n    let { tetris, ditchInterval } = this.state;\r\n    if(!ditchInterval && !tetris.done) {\r\n      tetris.down();\r\n      this.setState({ tetris });\r\n      ++this.steps;\r\n      if(this.steps % 6 === 0) --this.interval;\r\n    }\r\n\r\n    this.tid = window.setTimeout(this.intervalFunc, this.interval);\r\n    console.log(this.interval);\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    let k = e.key;\r\n    let { tetris } = this.state;\r\n    if(tetris.done) return;\r\n    if(k === \"ArrowLeft\") {\r\n      tetris.left();\r\n      this.setState({ditchInterval: true});\r\n      window.setTimeout(() => this.setState({ditchInterval: false}), 50);\r\n    }\r\n    else if(k === \"ArrowUp\") {\r\n      tetris.rotate();\r\n      this.setState({ditchInterval: true});\r\n      window.setTimeout(() => this.setState({ditchInterval: false}), 50);\r\n    }\r\n    else if(k === \"ArrowRight\") {\r\n      tetris.right();\r\n      this.setState({ditchInterval: true});\r\n      window.setTimeout(() => this.setState({ditchInterval: false}), 50);\r\n    }\r\n    else if(k === \"ArrowDown\") {\r\n      tetris.down();\r\n      this.setState({ditchInterval: true});\r\n      ++this.steps;\r\n      if(this.steps % 6 === 0) --this.interval;\r\n      window.setTimeout(() => this.setState({ditchInterval: false}), 50);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { tetris } = this.state;\r\n    return (\r\n      <div className=\"game\">\r\n        <Board board={tetris.board} rows={tetris.rows} cols={tetris.cols} />\r\n        <div id=\"bottom\" style={{textAlign: \"center\"}}>\r\n          <p id=\"score\">Score: {tetris.score}</p>\r\n          <button id=\"pabtn\" onClick={this.handleReset}>Play Again</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 id=\"heading\">Tetris</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}